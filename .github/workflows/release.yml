---
name: Release
# yamllint disable-line rule:truthy
on:
  push:
    branch:
      - "master"

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - denverton
          - geminilake
    runs-on: ubuntu-22.04
    env:
      SUFFIX: build-${{ matrix.arch }}
    steps:
      - name: Clone Repo
        uses: actions/checkout@v4
      - name: Build
        run: date > ${{ env.SUFFIX }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SUFFIX }}
          path: ${{ env.SUFFIX }}
          if-no-files-found: error
          retention-days: 7

  # based on https://allenhwkim.medium.com/semantic-release-without-npm-2af48cdf3098
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    environment: release
    needs: [linux]
    steps:
      - name: Mock package.json
        # because I hate that 20-or-so dot-files peppering the base directory
        # of a project -- can't find the source files in all the forest of
        # vanity config files
        #
        # Epic jq: jq -S '.release.plugins[2][1].assets |= ["bob"]' package.json
        #  echo '{ "name": "kernel-mods", "private": true, "release": { "branches": ["master"], "plugins": [ "@semantic-release/commit-analyzer", "@semantic-release/release-notes-generator", [ "@semantic-release/github", { "assets": [ { "path": "build-denverton", "label": "Denverton" }, { "path": "build-geminilake", "label": "GeminiLake" } ] } ] ] } }' > package.json
        run: |
          echo '{ "name": "kernel-mods", "private": true, "release": { "branches": ["master"], "plugins": [ "@semantic-release/commit-analyzer", "@semantic-release/release-notes-generator", [ "@semantic-release/github", { "assets": [ "build-*" ] } ] ] } }' > package.json
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          # It is recommended to specify a version range for semantic-release
          # when using semantic-release-action lower than @v4
          semantic_version: 19.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
